image: docker:latest

services:
  - docker:dind

before_script:
  - docker info
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY

variables:
  DOCKER_HOST: tcp://localhost:2375
  DOCKER_DRIVER: overlay2
  IMAGE_PROD_NAME: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME
  REGISTRY: quay.io
  IMAGE_NAME: kraken-tools
  REGISTRY_USER: your_org # we set this to override to samsung_cnct in gitlab Group Variables
  ROBOT_ACCOUNT: kraken_tools_rw
# Create a Gitlab Secret Variable called REGISTRY_PASSWORD and assign it the value of the registry robot docker login password.
# DO NOT PASTE THIS PASSWORD HERE.

stages:
  - build
  - test
  - publish
  - cleanup

build-branch:
  variables:
    IMAGE_URI: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_NAME-$CI_JOB_ID
  stage: build
  only:
    - branches
  except:
    - master
  script:
  - docker build -t $IMAGE_URI .
  - docker push $IMAGE_URI

build-master:
  stage: build
  only:
    - master
    - tags
  script:
  - docker build -t $IMAGE_PROD_NAME .
  - docker push $IMAGE_PROD_NAME

.aws-test: &aws_test_definition
  stage: test
  variables:
    JOB_BASE_NAME: ${CI_PROJECT_NAME}
    BUILD_ID: $CI_PIPELINE_ID
  image: $IMAGE_URI
  script:
  - mkdir -p /root/.ssh /root/.aws
  - echo $SSH_KEY | base64 -d > /root/.ssh/id_rsa
  - chmod og-wrx /root/.ssh/id_rsa
  - echo $SSH_PUBLIC_KEY | base64 -d > /root/.ssh/id_rsa.pub
  - echo $AWS_CREDENTIALS | base64 -d > /root/.aws/credentials
  - echo $AWS_CONFIG | base64 -d > /root/.aws/config
  - /bin/bash -c /aws-testing.sh

.gke-test: &gke_test_definition
  stage: test
  variables:
    JOB_BASE_NAME: ${CI_PROJECT_NAME}
    BUILD_ID: $CI_PIPELINE_ID
  image: $IMAGE_URI
  script:
  - mkdir -p /root/.ssh /root/.config/gcloud/
  - echo $SSH_KEY | base64 -d > /root/.ssh/id_rsa
  - chmod og-wrx /root/.ssh/id_rsa
  - echo $SSH_PUBLIC_KEY | base64 -d > /root/.ssh/id_rsa.pub
  - echo $GKE_CONFIG | base64 -d > /root/.config/gcloud/patrickRobot.json
  - /bin/bash -c /gke-testing.sh

.test_cloud_template:
  variables: &test_cloud_definition
    JOB_BASE_NAME: ${CI_PROJECT_NAME}
    BUILD_ID: $CI_PIPELINE_ID

test:aws-on-branch:
  <<: *aws_test_definition
  variables:
    <<: *test_cloud_definition
    IMAGE_URI: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  only:
    - branches
    - master

test:gke-on-branch:
  <<: *gke_test_definition
  variables:
    <<: *test_cloud_definition
    IMAGE_URI: $CI_REGISTRY_IMAGE:branch-$CI_COMMIT_REF_NAME-$CI_PIPELINE_ID
  only:
    - branches
    - master

test:aws-on-tags:
  <<: *aws_test_definition
  variables:
    <<: *test_cloud_definition
    IMAGE_URI: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

test:gke-on-tags:
  <<: *gke_test_definition
  variables:
    <<: *test_cloud_definition
    IMAGE_URI: $CI_REGISTRY_IMAGE:$CI_COMMIT_TAG
  only:
    - tags

publish-master:
  stage: publish
  only:
    - master
  script:
  - docker pull $IMAGE_PROD_NAME
  - docker login ${REGISTRY} -u ${REGISTRY_USER}+${ROBOT_ACCOUNT} -p ${REGISTRY_PASSWORD}
  # Any merge to master (i.e. a successful CI pass) will be tagged and pushed as latest
  - docker tag ${IMAGE_PROD_NAME} ${REGISTRY}/${REGISTRY_USER}/${IMAGE_NAME}:latest
  - docker push ${REGISTRY}/${REGISTRY_USER}/${IMAGE_NAME}:latest

publish-version-tag:
  stage: publish
  only:
    - /v[0-9]+\.[0-9]+(\.[0-9]+[a-z]?)?/
  script:
  - docker pull $IMAGE_PROD_NAME
  - docker login ${REGISTRY} -u ${REGISTRY_USER}+${ROBOT_ACCOUNT} -p ${REGISTRY_PASSWORD}
  # A tag push to master will be pushed to Quay with that tag
  - docker tag ${IMAGE_PROD_NAME} ${REGISTRY}/${REGISTRY_USER}/${IMAGE_NAME}:$CI_COMMIT_TAG
  - docker push ${REGISTRY}/${REGISTRY_USER}/${IMAGE_NAME}:$CI_COMMIT_TAG